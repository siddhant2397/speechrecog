# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18i27efVAzIaGFzOqDk-hJdG0oLQrSsUd
"""

import streamlit as st
from streamlit_audio_recorder import audio_recorder
import azure.cognitiveservices.speech as speechsdk
import tempfile

st.title("Azure Speech-to-Text Demo")

# Record audio from the browser
audio_bytes = audio_recorder(
    "Click to record",
    "Recording...",
    "Recorded!",
    pause_threshold=3.0, # seconds
    sample_rate=16000 # Azure requires 16kHz PCM for best results
)

if audio_bytes:
    st.audio(audio_bytes, format="audio/wav")
    # Save to temporary WAV file for Azure SDK
    with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as f:
        f.write(audio_bytes)
        wav_file = f.name

    st.write("Transcribing...")

    # Azure Speech-to-Text setup
    speech_key = st.secrets["speechkey"]
    service_region = st.secrets["serviceregion"]
    speech_config = speechsdk.SpeechConfig(subscription=speech_key, region=service_region)
    audio_config = speechsdk.AudioConfig(filename=wav_file)
    speech_recognizer = speechsdk.SpeechRecognizer(speech_config=speech_config, audio_config=audio_config)

    result = speech_recognizer.recognize_once_async().get()

    if result.reason == speechsdk.ResultReason.RecognizedSpeech:
        st.success(f"Recognized Text:\n{result.text}")
    elif result.reason == speechsdk.ResultReason.NoMatch:
        st.warning("No speech could be recognized.")
    elif result.reason == speechsdk.ResultReason.Canceled:
        st.error(f"Speech Recognition canceled: {result.cancellation_details.reason}")

    # Clean up temp file if needed
    # os.remove(wav_file)
else:
    st.write("Press the record button and speak.")
